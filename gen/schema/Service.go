package schema

type ServiceTrait struct {

	// The overall rating, based on a collection of reviews or ratings, of the item.
	//
	// RangeIncludes:
	// - http://schema.org/AggregateRating
	//
	AggregateRating *AggregateRating `json:"aggregateRating,omitempty" jsonld:"http://schema.org/aggregateRating"`

	// An intended audience, i.e. a group for whom something was created.
	//
	// RangeIncludes:
	// - http://schema.org/Audience
	//
	Audience *Audience `json:"audience,omitempty" jsonld:"http://schema.org/audience"`

	// An award won by or for this item.
	//
	// RangeIncludes:
	// - http://schema.org/Text
	//
	Award string `json:"award,omitempty" jsonld:"http://schema.org/award"`

	// An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.
	//
	// RangeIncludes:
	// - http://schema.org/Offer
	//
	Offers *Offer `json:"offers,omitempty" jsonld:"http://schema.org/offers"`

	// The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
	//
	// RangeIncludes:
	// - http://schema.org/Organization
	// - http://schema.org/Person
	//
	Provider interface{} `json:"provider,omitempty" jsonld:"http://schema.org/provider"`

	// A review of the item.
	//
	// RangeIncludes:
	// - http://schema.org/Review
	//
	Review *Review `json:"review,omitempty" jsonld:"http://schema.org/review"`

	// The hours during which this service or contact is available.
	//
	// RangeIncludes:
	// - http://schema.org/OpeningHoursSpecification
	//
	HoursAvailable *OpeningHoursSpecification `json:"hoursAvailable,omitempty" jsonld:"http://schema.org/hoursAvailable"`

	// The geographic area where a service or offered item is provided.
	//
	// RangeIncludes:
	// - http://schema.org/Text
	// - http://schema.org/AdministrativeArea
	// - http://schema.org/GeoShape
	// - http://schema.org/Place
	//
	AreaServed interface{} `json:"areaServed,omitempty" jsonld:"http://schema.org/areaServed"`

	// A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
	//
	// RangeIncludes:
	// - http://schema.org/Text
	// - http://schema.org/Thing
	// - http://schema.org/PhysicalActivityCategory
	//
	Category interface{} `json:"category,omitempty" jsonld:"http://schema.org/category"`

	// The geographic area where the service is provided.
	//
	// RangeIncludes:
	// - http://schema.org/GeoShape
	// - http://schema.org/AdministrativeArea
	// - http://schema.org/Place
	//
	ServiceArea interface{} `json:"serviceArea,omitempty" jsonld:"http://schema.org/serviceArea"`

	// An associated logo.
	//
	// RangeIncludes:
	// - http://schema.org/ImageObject
	// - http://schema.org/URL
	//
	Logo interface{} `json:"logo,omitempty" jsonld:"http://schema.org/logo"`

	// The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
	//
	// RangeIncludes:
	// - http://schema.org/Brand
	// - http://schema.org/Organization
	//
	Brand interface{} `json:"brand,omitempty" jsonld:"http://schema.org/brand"`

	// Indicates an OfferCatalog listing for this Organization, Person, or Service.
	//
	// RangeIncludes:
	// - http://schema.org/OfferCatalog
	//
	HasOfferCatalog *OfferCatalog `json:"hasOfferCatalog,omitempty" jsonld:"http://schema.org/hasOfferCatalog"`

	// A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
	//
	// RangeIncludes:
	// - http://schema.org/ServiceChannel
	//
	AvailableChannel *ServiceChannel `json:"availableChannel,omitempty" jsonld:"http://schema.org/availableChannel"`

	// An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
	//
	// RangeIncludes:
	// - http://schema.org/Person
	// - http://schema.org/Organization
	//
	Broker interface{} `json:"broker,omitempty" jsonld:"http://schema.org/broker"`

	// A pointer to another, somehow related product (or multiple products).
	//
	// RangeIncludes:
	// - http://schema.org/Product
	// - http://schema.org/Service
	//
	IsRelatedTo interface{} `json:"isRelatedTo,omitempty" jsonld:"http://schema.org/isRelatedTo"`

	// A pointer to another, functionally similar product (or multiple products).
	//
	// RangeIncludes:
	// - http://schema.org/Product
	// - http://schema.org/Service
	//
	IsSimilarTo interface{} `json:"isSimilarTo,omitempty" jsonld:"http://schema.org/isSimilarTo"`

	// The tangible thing generated by the service, e.g. a passport, permit, etc.
	//
	// RangeIncludes:
	// - http://schema.org/Thing
	//
	Produces *Thing `json:"produces,omitempty" jsonld:"http://schema.org/produces"`

	// Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
	//
	// RangeIncludes:
	// - http://schema.org/Text
	//
	ProviderMobility string `json:"providerMobility,omitempty" jsonld:"http://schema.org/providerMobility"`

	// The audience eligible for this service.
	//
	// RangeIncludes:
	// - http://schema.org/Audience
	//
	ServiceAudience *Audience `json:"serviceAudience,omitempty" jsonld:"http://schema.org/serviceAudience"`

	// The tangible thing generated by the service, e.g. a passport, permit, etc.
	//
	// RangeIncludes:
	// - http://schema.org/Thing
	//
	ServiceOutput *Thing `json:"serviceOutput,omitempty" jsonld:"http://schema.org/serviceOutput"`

	// The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
	//
	// RangeIncludes:
	// - http://schema.org/Text
	//
	ServiceType string `json:"serviceType,omitempty" jsonld:"http://schema.org/serviceType"`

	// Human-readable terms of service documentation.
	//
	// RangeIncludes:
	// - http://schema.org/Text
	// - http://schema.org/URL
	//
	TermsOfService interface{} `json:"termsOfService,omitempty" jsonld:"http://schema.org/termsOfService"`

}

type Service struct {
	MetaTrait
	ServiceTrait
	IntangibleTrait
	ThingTrait
	AdditionalTrait
}

func NewService() (x Service) {
	x.Type = "http://schema.org/Service"

	return
}
